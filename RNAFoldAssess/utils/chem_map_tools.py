import os


class ChemicalMappingTools:
    @staticmethod
    def generate_secondary_structure(fasta_loc, chemical_mapping_type, name, cf_loc, destination="."):
        # Make sure `Fold` is in your PATH. If on HCC Swan, run `module load rnastructure`
        # Also probably have to run export DATAPATH=/util/opt/anaconda/deployed-conda-envs/packages/rnastructure/envs/rnastructure-6.1/share/rnastructure/data_tables
        if chemical_mapping_type.upper() not in ["DMS", "SHAPE", "CMCT"]:
            raise ChemicalMappingToolsException(f"Only DMS, SHAPE, and CMCT are supported chemical mampping types (you supplied '{chemical_mapping_type}')")
        destination_file = f"{destination}/{name}.dbn"
        cmd = f"Fold {fasta_loc} --{chemical_mapping_type.upper()} {cf_loc} {destination}/{name}.dbn"
        os.system(cmd)
        if os.path.exists(destination_file):
            return destination_file
        else:
            raise ChemicalMappingToolsException(f"Error running `{cmd}`, could not create {destination_file}")


    @staticmethod
    def generate_from_datapoint(datapoint, chemical_mapping_type, cf_loc=None):
        sequence = datapoint.sequence
        created_file = False
        if not cf_loc:
            cf_loc = datapoint.to_constraint_file(experiment_type=chemical_mapping_type)
            created_file = True
        try:
            return ChemicalMappingTools.generate_secondary_structure(sequence, chemical_mapping_type, datapoint.name, cf_loc)
        finally:
            if created_file:
                # Delete constraint file generated by DataPoint object
                os.remove(cf_loc)



class ChemicalMappingToolsException(Exception):
    pass
